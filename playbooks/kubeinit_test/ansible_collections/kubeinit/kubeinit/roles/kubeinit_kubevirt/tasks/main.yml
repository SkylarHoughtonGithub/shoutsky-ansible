---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: "Install KubeVirt"
  ansible.builtin.shell: |
    set -o pipefail
    export KUBECONFIG=~/install_dir/auth/kubeconfig;
    export KUBEVIRT_VERSION="v0.32.0"
    # Latest
    # export KUBEVIRT_VERSION=$(curl -s https://api.github.com/repos/kubevirt/kubevirt/releases | grep tag_name | grep -v -- - | sort -V | tail -1 | awk -F':' '{print $2}' | sed 's/,//' | xargs)
    echo $KUBEVIRT_VERSION
    kubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-operator.yaml
    kubectl create -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-cr.yaml
    curl -L -o virtctl https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-linux-x86_64
    chmod +x virtctl
  args:
    executable: /bin/bash
  register: _result
  changed_when: "_result.rc == 0"
  delegate_to: "{{ kubeinit_provision_service_node }}"

# - name: "wait until crds are loaded"
#   ansible.builtin.shell: |
#     set -o pipefail
#     export KUBECONFIG=~/install_dir/auth/kubeconfig; \
#     kubectl get crds | grep virtualmachines.kubevirt.io
#   args:
#     executable: /bin/bash
#   register: _result
#   changed_when: "_result.rc == 0"
#   retries: 60
#   delay: 60
#   until: _result.stdout_lines | list | length == 1
#   delegate_to: "{{ kubeinit_provision_service_node }}"

# - name: "Deploy example VM"
#   ansible.builtin.shell: |
#     set -o pipefail
#     export KUBECONFIG=~/install_dir/auth/kubeconfig;
#     kubectl apply -f https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/labs/manifests/vm.yaml
#     ./virtctl start testvm
#   args:
#     executable: /bin/bash
#   register: _result
#   changed_when: "_result.rc == 0"
#   delegate_to: "{{ kubeinit_provision_service_node }}"

# - name: Print some final data
#   vars:
#     msg: |
#       Connect to the service node and execute
#       the following steps to test a sample VM:
#       kubectl apply -f https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/labs/manifests/vm.yaml
#       ./virtctl start testvm
#       kubectl get vms
#       kubectl get vmis
#       oc get events -n default
#   ansible.builtin.debug:
#     msg: "{{ msg.split('\n') }}"
