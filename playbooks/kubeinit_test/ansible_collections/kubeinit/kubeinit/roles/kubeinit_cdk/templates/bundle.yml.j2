---
#
# From: https://jaas.ai/charmed-kubernetes
# git clone https://github.com/charmed-kubernetes/bundle
# cd bundle
# make
#
description: A highly-available, production-grade Kubernetes cluster.
issues: https://bugs.launchpad.net/charmed-kubernetes-bundles
series: jammy
source: https://github.com/charmed-kubernetes/bundle
website: https://ubuntu.com/kubernetes/charmed-k8s
name: cdk-flannel
machines:
{% for item in groups['all_cluster_nodes'] %}
  "{{ loop.index0 }}":
{% endfor %}
applications:
  containerd:
    annotations:
      gui-x: '475'
      gui-y: '800'
    channel: 1.26/stable
    charm: containerd
  easyrsa:
    annotations:
      gui-x: '90'
      gui-y: '420'
    charm: easyrsa
    channel: 1.26/stable
    constraints: root-disk=8G
    num_units: 1
    to:
{% if kubeinit_compute_count|int > 0 %}
    # This means that we will deploy the application
    # in the first worker node as the numbering starts
    # at 0. So, the count of controller nodes index will be
    # the first compute node.
    - "{{ kubeinit_controller_count }}"
{% else %}
    - "0"
{% endif %}
  etcd:
    annotations:
      gui-x: '800'
      gui-y: '420'
    charm: etcd
    channel: 1.26/stable
    constraints: root-disk=8G
    num_units: {{ kubeinit_controller_count }}
    to:
{% for item in groups['all_controller_nodes'] %}
    - "{{ loop.index0 }}"
{% endfor %}
  flannel:
    annotations:
      gui-x: '475'
      gui-y: '605'
    charm: flannel
    channel: 1.26/stable
  kubeapi-load-balancer:
    annotations:
      gui-x: '450'
      gui-y: '250'
    charm: kubeapi-load-balancer
    channel: 1.26/stable
    constraints: mem=4G root-disk=8G
    expose: true
    num_units: 1
    to:
{% if kubeinit_compute_count|int > 0 %}
    # This means that we will deploy the application
    # in the first worker node as the numbering starts
    # at 0. So, the count of controller nodes index will be
    # the first compute node.
    - "{{ kubeinit_controller_count }}"
{% else %}
    - "0"
{% endif %}
  kubernetes-control-plane:
    annotations:
      gui-x: '800'
      gui-y: '850'
    charm: kubernetes-control-plane
    channel: 1.26/stable
    constraints: cores=2 mem=4G root-disk=16G
    num_units: {{ kubeinit_controller_count }}
    to:
{% for item in groups['all_controller_nodes'] %}
    - "{{ loop.index0 }}"
{% endfor %}
{% if kubeinit_compute_count|int > 0 %}
  kubernetes-worker:
    annotations:
      gui-x: '90'
      gui-y: '850'
    charm: kubernetes-worker
    channel: 1.26/stable
    constraints: cores=4 mem=4G root-disk=16G
    expose: true
    num_units: {{ kubeinit_compute_count }}
    to:
{% for item in groups['all_compute_nodes'] | default([]) %}
    - "{{ loop.index0 + kubeinit_controller_count|int }}"
{% endfor %}
{% endif %}
relations:
- - kubernetes-control-plane:loadbalancer-external
  - kubeapi-load-balancer:lb-consumers
- - kubernetes-control-plane:loadbalancer-internal
  - kubeapi-load-balancer:lb-consumers
{% if kubeinit_compute_count|int > 0 %}
- - kubernetes-control-plane:kube-control
  - kubernetes-worker:kube-control
{% endif %}
- - kubernetes-control-plane:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client
- - kubernetes-control-plane:etcd
  - etcd:db
{% if kubeinit_compute_count|int > 0 %}
- - kubernetes-worker:certificates
  - easyrsa:client
{% endif %}
- - kubeapi-load-balancer:certificates
  - easyrsa:client
- - flannel:etcd
  - etcd:db
- - flannel:cni
  - kubernetes-control-plane:cni
{% if kubeinit_compute_count|int > 0 %}
- - flannel:cni
  - kubernetes-worker:cni
- - containerd:containerd
  - kubernetes-worker:container-runtime
{% endif %}
- - containerd:containerd
  - kubernetes-control-plane:container-runtime
