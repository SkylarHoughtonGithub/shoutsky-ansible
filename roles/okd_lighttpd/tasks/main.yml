#SPDX-License-Identifier: MIT-0
---
# tasks file for okd_lighttpd_kernel_boot
- name: merge override and default parameters
  ansible.builtin.set_fact:
    lighttpd_configuration: "{{ lighttpd_defaults | combine(okd_bootstrap_configuration | default({}), recursive=true) }}"

- name: Install lighttpd and SSL dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - lighttpd
    - openssl

- name: Create directories for SSL certificates
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - "{{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}"
    - "{{ lighttpd_configuration.kernel_boot_document_root }}"

- name: Generate self-signed SSL certificate
  command: >
    openssl req -new -x509 -nodes
    -out {{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.cert_name }}
    -keyout {{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.key_name }}
    -days {{ lighttpd_configuration.kernel_boot_ssl.cert_expiration_days }}
    -subj "/C={{ lighttpd_configuration.kernel_boot_ssl.cert_country }}/ST={{ lighttpd_configuration.kernel_boot_ssl.cert_state }}/L={{ lighttpd_configuration.kernel_boot_ssl.cert_locality }}/O={{ lighttpd_configuration.kernel_boot_ssl.cert_organization }}/CN={{ lighttpd_configuration.kernel_boot_server_name }}"
  args:
    creates: "{{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.cert_name }}"
  when: lighttpd_ssl_generate_cert

- name: Create PEM file from cert and key
  shell: "cat {{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.key_name }} {{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.cert_name }} > {{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.pem_name }}"
  args:
    creates: "{{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ lighttpd_configuration.kernel_boot_ssl.pem_name }}"
  when: lighttpd_ssl_generate_cert

- name: Set permissions on SSL files
  file:
    path: "{{ lighttpd_configuration.kernel_boot_ssl.certs_dir }}/{{ item }}"
    owner: root
    group: root
    mode: '0600'
  with_items:
    - "{{ lighttpd_configuration.kernel_boot_ssl.key_name }}"
    - "{{ lighttpd_configuration.kernel_boot_ssl.cert_name }}"
    - "{{ lighttpd_configuration.kernel_boot_ssl.pem_name }}"

- name: Create lighttpd configuration
  template:
    src: lighttpd.conf.j2
    dest: "{{ lighttpd_configuration.kernel_boot_conf_path }}"
    owner: root
    group: root
    mode: '0644'
  notify: restart lighttpd

- name: Ensure lighttpd service is enabled and started
  service:
    name: lighttpd
    state: started
    enabled: yes
